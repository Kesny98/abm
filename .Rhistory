ggplot(data=green, aes(x=date, y=M3, color=yellow))+
geom_bar(stat="identity")
View(df1)
### Effacer la première ligne ne contenant aucune donnée
agregatsmon.csv<-agregatsmon.csv [-1,]
library(ggplot2)
ggplot(data=red,aes(x=date, y=M3, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### Traçons les graphiques
### 1) Diagramme en ligne
ggplot(data=red)+
geom_line(aes(x=date, y=M3, color=blue))
### 2) Diagramme en bâton
ggplot(data=green, aes(x=date, y=M3, color=yellow))+
geom_bar(stat="identity")
View(df1)
### Importation des données
df1<-read.csv("agregatsmon.csv")
library(ggplot2)
ggplot(data=red,aes(x=date, y=M3, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=red,aes(X=date, X.13=MONNAIE_EN_CIRCULATION, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(data=green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(Date=red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(Date=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(Date=green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(df1=red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(df1=green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data ==red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data == red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(data ==green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
---
title: "Devoir final 1"
author: "Kesny Philippe"
date: '2022-06-03'
output: word_document
---
// Ce travail est effectué sur les agrégats monétaires de la Banque de la République d'Haïti. Ensuite, une manipulation des données est réalisée ;
// Avec Un filtrage des colonnes de septembre 1992 jusqu'à Octobre 2021 ainsi que la suppression des lignes et des colonnes non nécessaires pour la réalision du projet ;
// Un choix de 3 variables (ou colonnes) a été fait: le taux de change (USD en HTG), la masse monétaire en circulation(millions de gourdes) et inflation (en pourcentage).
```{r, message=FALSE, warning=FALSE, echo=F }
library(tidyverse)
library(readxl)
library(tseries)
library(lmtest)
url10<-'https://www.brh.ht/wp-content/uploads/agregatsmon.xls'
kp1 <- tempfile()
download.file(url1, p1f, mode="wb")
agregatsmon.data <-read_excel(path = kp1, skip = 2)
### Affichage des 6 premières lignes
head(agregatsmon.data)
#### Suppression des 10 dernières lignes
tail(agregatsmon.data, n = 10)
agregatsmon.data <- rename(agregatsmon.data, Date = ...1)
agregatsmon.data <- agregatsmon.data[-1,] ### Effacer les premières lignes des variables ne présentant rien
### conversion de la date en format caractère -> numérique
agregatsmon.data$Date <- as.numeric(agregatsmon.data$Date)
agregatsmon.data$Date <- as.Date(agregatsmon.data$Date,
origin = "1992-09-01")
agregatsmon.data$Date[399] <- "2011-09-01"
agregatsmon.data$Date[400] <- "2011-10-01"
agregatsmon.data$Date[401] <- "2011-11-01"
agregatsmon.data$Date[402] <- "2011-12-01"
agregatsmon.data$Date[403] <- "2012-01-01"
agregatsmon.data$Date[404] <- "2004-02-01"
agregatsmon.data$Date[405] <- "2012-03-01"
agregatsmon.data$Date[406] <- "2012-04-01"
agregatsmon.data$Date[407] <- "2012-05-01"
agregatsmon.data$Date[408] <- "2012-06-01"
agregatsmon.data$Date[409] <- "2012-07-01"
agregatsmon.data$Date[410] <- "2012-08-01"
agregatsmon.data$Date[430] <- "2014-04-01"
agregatsmon.data$Date[431] <- "2014-05-01"
agregatsmon.data$Date[432] <- "2014-06-01"
agregatsmon.data$Date[433] <- "2014-07-01"
agregatsmon.data$Date[434] <- "2014-08-01"
agregatsmon.data2 <- agregatsmon.data %>%
filter(Date >= "2107-12-04")%>%
#head(agregatsmon.data2)
#######
# 3. Enlever toutes les colonnes inutiles
###########
agregatsmon.data2 <- agregatsmon.data2 %>%
#head(agregatsmon.data3)
agregatsmon.data3 <- agregatsmon.data3[, c(10,14,24)]
agregatsmon.data3 <- agregatsmon.data3 %>%
rename(`Inflation (glisse.annuel)`) = "inflation"
taux_de_change = "TAUX DE CHANGE BRH"
monnaie_en_circulation = "MONNAIE EN CIRCULATION"
agregatsmon.data3 <- agregatsmon.data3 %>%
mutate(`Inflation (glisse.annuel)`) = as.numeric(inflation)
taux_de_change = as.numeric(taux_de_change)
monnaie_en_circulation  = as.numeric(monnaie_en_circulation)
inflation = as.numeric(inflation)
agregatsmon.data3$Date <- agregatsmon.data2$Date
Sur ces trois variables, il faut
// Vérifier si elles sont stationnaires en niveau ou en différence premiere ou deuxieme
// vérifier les sens de la causalité, au sens de Granger, entre ces trois variables
// réaliser une regression linéaire tenant compte des résultats des tests de causalité
A Choix des variables
#A Les analyses se font sur les variables suivantes:
- Taux de change
- Monnaie en circulation
- Inflation
#B Test de stationnarité ou Augmented Dickey-Fuller test
A time series is said to be “stationary” if it has no trend, exhibits constant variance over time, and has a constant autocorrelation structure over time.
One way to test whether a time series is stationary is to perform an augmented Dickey-Fuller test, which uses the following null and alternative hypotheses:
install.packages("tidyverse")
install.packages("readxl")
install.packages("tseries")
install.packages("lmtest")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data ==red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data == red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(data ==green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
?ggplot(data="red")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(df1=red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color='brown'))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(df1=green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data="red",aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color="brown"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data="red")+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(data="green", aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color="yellow"))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=brown))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(data=green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=r,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=b))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=r)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=bl))
### 3) Diagramme en bâton
ggplot(data=gr, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=ye))+
geom_bar(stat="identity")
View(df1)
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=r,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=b))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=r)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=bl))
### 3) Diagramme en bâton
ggplot(data=gr, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=ye))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=brown))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(data=green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=brown))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=blue))
### 3) Diagramme en bâton
ggplot(data=green, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color=yellow))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=red,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=red)+
geom_line(aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(data=read, aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, color="blue"))+
geom_bar(stat="identity")
View(df1)
View(df1)
View(df1)
View(df1)
View(df1)
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(data=red,aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(data=red)+
geom_line(aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(data=read, aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))+
geom_bar(stat="identity")
### Nuage de points
library(ggplot2)
ggplot(df1=red,aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1=red)+
geom_line(aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(df1=read, aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(df1,aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1)+
geom_line(aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(df1, aes(X=Date, Y=MONNAIE_EN_CICULATION, color="blue"))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(df1,aes(x=annees, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1)+
geom_line(aes(x=annees, y=MONNAIE_EN_CICULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(df1, aes(x=annees, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(df1,aes(x=annees, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1)+
geom_line(aes(x=annees, y=MONNAIE_EN_CICULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(df1, aes(x=annees, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_bar(stat="identity")
df1
library(ggplot2)
ggplot(df1,aes(x=annees, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### Importation des données
df1<-read.csv("agregatsmon.csv")
df1
library(ggplot2)
ggplot(df1,aes(x=Date, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
ggplot(df1)+
geom_line(aes(x=Date, y=MONNAIE_EN_CICULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(df1, aes(x=Date, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
df1
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(df1=red,aes(x=Date, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_point(size=2, shape=1) +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1=red)+
geom_line(aes(x=Date, y=MONNAIE_EN_CICULATION, color="blue"))
### 3) Diagramme en bâton
ggplot(df1=red, aes(x=Date, y=MONNAIE_EN_CICULATION, color="blue"))+
geom_bar(stat="identity")
### Importation des données
df1<-read.csv("agregatsmon.csv")
df1
### Traçons les graphiques
### Nuage de points
library(ggplot2)
ggplot(df1,aes(x=Date, y=MONNAIE_EN_CICULATION, colour=line))+
geom_line(colour="blue")
geom_point(size=2, shape=1, colour="blue") +
theme_classic()
### 2) Diagramme en ligne
ggplot(df1,aes(x=Date, y=MONNAIE_EN_CICULATION, colour=line))+
geom_line(colour="blue")
### 3) Diagramme en bâton
ggplot(df1, aes(x=Date, y=MONNAIE_EN_CICULATION, colour=line))+
geom_bar(stat="identity")
X<-date
X.13<-MONNAIE_EN_CICULATION
X.13<-MONNAIE EN CICULATION
View(df1)
### Importation des données
df1<-read.csv("agregatsmon.csv")
X<-date
X.13<-MONNAIE_EN_CIRCULATION
df1
library(ggplot2)
ggplot(df1,aes(X=date, X.13=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="blue")
geom_point(size=2, shape=1, colour="blue") +
theme_classic()
ggplot(df1,aes(X=Date, X.13=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="blue")
View(df1)
### Importation des données
df1<-read.csv("agregatsmon.csv")
X<-date
X.13<-MONNAIE_EN_CIRCULATION
df1
library(ggplot2)
ggplot(df1,aes(X=date, X.13=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="blue")
geom_point(size=2, shape=1, colour="blue") +
theme_classic()
ggplot(df1,aes(X=date, X.13=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="blue")
### 3) Diagramme en bâton
ggplot(df1, aes(x=date, y=MONNAIE_EN_CIRCULATION, colour=line))+
geom_bar(stat="identity")
ggplot(blue)+
geom_line(aes(X=date, y=MONNAIE_EN_CIRCULATION, colour="yellow"))
### Importation des données
df1<-read.csv("agregatsmon.csv")
x<-date
y<-MONNAIE_EN_CIRCULATION
df1
library(ggplot2)
ggplot(df1=blue,aes(x=date, y=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="yellow")
geom_point(size=2, shape=1, colour="blue") +
theme_classic()
ggplot(blue)+
geom_line(aes(x=date, y=MONNAIE_EN_CIRCULATION, colour="yellow"))
### 3) Diagramme en bâton
ggplot(df1=blue, aes(x=date, y=MONNAIE_EN_CIRCULATION, colour=line))+
geom_bar(stat="identity")
### Importation des données
data.frame<-read.csv("agregatsmon.csv")
x<-date
y<-MONNAIE_EN_CIRCULATION
df1
library(ggplot2)
ggplot(data = df1 ,aes(x=date, y=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="yellow")
geom_point(size=2, shape=1, colour="blue") +
theme_classic()
ggplot(df1)+
geom_line(aes(x=date, y=MONNAIE_EN_CIRCULATION, colour="yellow"))
### 3) Diagramme en bâton
ggplot(data = df1, aes(x=date, y=MONNAIE_EN_CIRCULATION, colour=line))+
geom_bar(stat="identity")
X<-date
### Importation des données
data.frame<-read.csv("agregatsmon.csv")
X<-date
X.13<-MONNAIE_EN_CIRCULATION
df1
library(ggplot2)
ggplot(data = df1 ,aes(X=date, X.13=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="yellow")
geom_point(size=2, shape=1, colour="blue") +
theme_classic()
View(data.frame)
View(df1)
### Importation des données
df1<-read.csv("agregatsmon.csv")
df1
library(ggplot2)
ggplot(data = df1 ,aes(X=date, X.13=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="yellow")
geom_point(size=2, shape=1, colour="blue") +
theme_classic()
library(ggplot2)
ggplot(data = df1 ,aes(X=date, X.13=MONNAIE_EN_CIRCULATION, colour=line))+
geom_line(colour="yellow")
View(df1)
### Importation des données
df1<-read.csv("agregatsmon.csv")
df1
library(ggplot2)
ggplot(data = df1 ,aes(x=date, y=X.13, colour=line))+
geom_line(colour="yellow")
geom_point() +
theme_classic()
ggplot(df1)+
geom_line(aes(x=date, y=X.13, colour="yellow"))
### 3) Diagramme en bâton
ggplot(data = df1, aes(x=date, y=X.13, colour=line))+
geom_bar(stat="identity")
setwd("~/Devoir final 2")
setwd("~/Devoir final 2")
### Importation des données
df1<-read.csv("agregatsmon.csv")
df1
View(df1)
setwd("~/Devoir final 2")
